{"version":3,"file":"image-upload.component.d.ts","sources":["image-upload.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { EventEmitter, OnChanges, OnInit } from '@angular/core';\nimport { FileHolder } from '../file-holder';\nimport { ImageUploadService } from '../image-upload.service';\nimport { Style } from '../style';\nimport { UploadMetadata } from '../upload-metadata';\nexport declare class ImageUploadComponent implements OnInit, OnChanges {\n    private imageService;\n    files: FileHolder[];\n    fileCounter: number;\n    fileOver: boolean;\n    showFileTooLargeMessage: boolean;\n    beforeUpload: (metadata: UploadMetadata) => UploadMetadata | Promise<UploadMetadata>;\n    buttonCaption: string;\n    disabled: boolean;\n    cssClass: string;\n    clearButtonCaption: string;\n    dropBoxMessage: string;\n    fileTooLargeMessage: string;\n    headers: HttpHeaders | {\n        [name: string]: string | string[];\n    };\n    max: number;\n    maxFileSize: number;\n    preview: boolean;\n    partName: string;\n    style: Style;\n    supportedExtensions: string[];\n    url: string;\n    withCredentials: boolean;\n    uploadedFiles: string[] | Array<{\n        url: string;\n        fileName: string;\n        blob?: Blob;\n    }>;\n    removed: EventEmitter<FileHolder>;\n    uploadStateChanged: EventEmitter<boolean>;\n    uploadFinished: EventEmitter<FileHolder>;\n    previewClicked: EventEmitter<FileHolder>;\n    private inputElement;\n    private pendingFilesCounter;\n    constructor(imageService: ImageUploadService);\n    ngOnInit(): void;\n    deleteAll(): void;\n    deleteFile(file: FileHolder): void;\n    previewFileClicked(file: FileHolder): void;\n    ngOnChanges(changes: any): void;\n    onFileChange(files: FileList): void;\n    onFileOver: (isOver: any) => any;\n    private onResponse;\n    private processUploadedFiles;\n    private uploadFiles;\n    private uploadSingleFile;\n}\n"]}