{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Products/products.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"angular2-image-upload\";\nimport * as i8 from \"@angular/material/button\";\nconst _c0 = [\"foto\"];\nexport class AddProductComponent {\n  constructor(apiProducts, snackBar, dialogRef) {\n    this.apiProducts = apiProducts;\n    this.snackBar = snackBar;\n    this.dialogRef = dialogRef;\n    this.addForm = new FormGroup({\n      idProduct: new FormControl(''),\n      productName: new FormControl(''),\n      productPrice: new FormControl(''),\n      productStock: new FormControl(''),\n      imageProduct: new FormControl(''),\n      idCategory: new FormControl('') //token: new FormControl('')\n\n    });\n    this.cargando = false;\n  } // async add(){\n  //   if(!this.productNew.productName){\n  //     return alert(\"Ingresa Nombre del prodcuto\");\n  //   }\n  //   if(!this.productNew.productPrice){\n  //     return alert(\"Ingresa Precio del prodcuto\");\n  //   }\n  //   if(!this.productNew.productStock){\n  //     return alert(\"Ingresa Cantidad del prodcuto\");\n  //   }\n  //   if(!this.productNew.idCategory){\n  //     return alert(\"Ingresa Categoria del prodcuto\");\n  //   }\n  //   let archiv = this.foto.nativeElement.files;\n  //   if(!archiv.length){\n  //     return alert(\"Ingresa Imagen del producto\");\n  //   }\n  //   this.cargando = true;\n  //   // guarda prodcuto\n  //   const fd = new FormData();\n  //   for (let x = 0; x < archiv.length; x++){\n  //     fd.append(`foto_${x}`, archiv[x])\n  //   }\n  //   console.log('fb',fd)\n  //   this.apiProducts.AddProducts(this.productNew);\n  //   this.snackBar.open(\"Producto guardado\", \"\", {\n  //     duration: 1500,\n  //     horizontalPosition: \"start\",\n  //     verticalPosition: \"top\",\n  //   });\n  //   this.cargando = false;\n  //   this.productNew = new ProductsC();\n  //   this.foto.nativeElement.value = \"\";\n  // }\n\n\n  ngOnInit() {}\n\n  onUploadFinish(event) {\n    //this.image = event;\n    // try {\n    //   if (event.target.files && event.target.files.length > 0) {\n    //     const file = event.target.files[0];\n    //     const reader = new FileReader();\n    //     if (file.type.indexOf(\"image\") < 0) {\n    //       this.snackBar.open('Solo se permite la carga de imagenes en formato JPG y PNG.');\n    //       return;\n    //     }\n    //     const extension = file.name.split('.').pop();\n    //     if (extension !== \"JPG\" && extension !== \"jpg\" && extension !== \"PNG\" && extension !== \"png\") {\n    //       this.snackBar.open('Solo se permite la carga de imagenes en formato JPG y PNG.');\n    //       return;\n    //     }\n    //     console.log(file);\n    //     if (file.size > 100000) {\n    //       this.snackBar.open('Por favor carga una imagen que no exceda de 100KB.');\n    //       return;\n    //     }\n    //     reader.readAsDataURL(file);\n    //     reader.onloadend = () => {\n    //       this.image = (reader.result as string);\n    //       this.formTemplateMail.controls['logo'].setValue(reader.result as string);\n    //     };\n    //   }\n    // }\n    // catch (ex) {\n    //   console.log(ex);\n    // }\n    console.log('event', event);\n  }\n\n  addProduct(form) {\n    form.imageProduct = this.image;\n    console.log(\"addForm\", form);\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n}\n\nAddProductComponent.ɵfac = function AddProductComponent_Factory(t) {\n  return new (t || AddProductComponent)(i0.ɵɵdirectiveInject(i1.ProductsService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n};\n\nAddProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddProductComponent,\n  selectors: [[\"app-add-product\"]],\n  viewQuery: function AddProductComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.foto = _t.first);\n    }\n  },\n  decls: 25,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"mat-dialog-title\", \"\"], [1, \"form-group\", \"row\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Nombre Producto\", \"formControlName\", \"productName\"], [1, \"col\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Precio Producto\", \"formControlName\", \"productPrice\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Cantidad Producto\", \"formControlName\", \"productStock\"], [3, \"uploadFinished\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"categoria\", \"formControlName\", \"idCategory\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"danger\", 3, \"click\"]],\n  template: function AddProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddProductComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.addProduct(ctx.addForm.value);\n      });\n      i0.ɵɵelementStart(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Productos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-dialog-content\");\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"mat-form-field\");\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelementStart(9, \"mat-form-field\");\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4);\n      i0.ɵɵelementStart(12, \"mat-form-field\");\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 2);\n      i0.ɵɵelementStart(15, \"div\", 4);\n      i0.ɵɵelementStart(16, \"image-upload\", 7);\n      i0.ɵɵlistener(\"uploadFinished\", function AddProductComponent_Template_image_upload_uploadFinished_16_listener($event) {\n        return ctx.onUploadFinish($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 4);\n      i0.ɵɵelementStart(18, \"mat-form-field\");\n      i0.ɵɵelement(19, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-dialog-actions\");\n      i0.ɵɵelementStart(21, \"button\", 9);\n      i0.ɵɵtext(22, \"Guardar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AddProductComponent_Template_button_click_23_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(24, \"Cancelar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.addForm);\n    }\n  },\n  directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i3.MatDialogTitle, i3.MatDialogContent, i5.MatFormField, i6.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i7.ImageUploadComponent, i3.MatDialogActions, i8.MatButton],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtcHJvZHVjdC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\AmisDesarrolladorSen\\Desktop\\GearTech\\GearTech-GearTechV1\\src\\app\\Views\\add-product\\add-product.component.ts","C:\\Users\\AmisDesarrolladorSen\\Desktop\\GearTech\\GearTech-GearTechV1\\src\\app\\Views\\add-product\\add-product.component.html"],"names":[],"mappings":"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","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\nimport { Component, ElementRef, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductsC, ProductsI } from 'src/app/Models/Products.interface';\nimport { ProductsService } from 'src/app/Services/Products/products.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n productNew : ProductsI;\n image : any;\n @ViewChild(\"foto\", {\n   read: ElementRef\n }) foto: ElementRef;\n\n addForm = new FormGroup({\n    idProduct: new FormControl(''),\n    productName: new FormControl(''),\n    productPrice: new FormControl(''),\n    productStock: new FormControl(''),\n    imageProduct: new FormControl(''),\n    idCategory: new FormControl('')\n  //token: new FormControl('')\n  \n});\n  constructor(\n    private apiProducts: ProductsService\n    , private snackBar: MatSnackBar\n    ,public dialogRef: MatDialogRef<AddProductComponent>\n  ) { }\n\n  public cargando = false;\n\n  \n  // async add(){\n  //   if(!this.productNew.productName){\n  //     return alert(\"Ingresa Nombre del prodcuto\");\n  //   }\n  //   if(!this.productNew.productPrice){\n  //     return alert(\"Ingresa Precio del prodcuto\");\n  //   }\n  //   if(!this.productNew.productStock){\n  //     return alert(\"Ingresa Cantidad del prodcuto\");\n  //   }\n  //   if(!this.productNew.idCategory){\n  //     return alert(\"Ingresa Categoria del prodcuto\");\n  //   }\n  //   let archiv = this.foto.nativeElement.files;\n  //   if(!archiv.length){\n  //     return alert(\"Ingresa Imagen del producto\");\n  //   }\n  //   this.cargando = true;\n  //   // guarda prodcuto\n    \n    \n  //   const fd = new FormData();\n  //   for (let x = 0; x < archiv.length; x++){\n  //     fd.append(`foto_${x}`, archiv[x])\n  //   }\n  //   console.log('fb',fd)\n\n  //   this.apiProducts.AddProducts(this.productNew);\n  //   this.snackBar.open(\"Producto guardado\", \"\", {\n  //     duration: 1500,\n  //     horizontalPosition: \"start\",\n  //     verticalPosition: \"top\",\n  //   });\n\n  //   this.cargando = false;\n  //   this.productNew = new ProductsC();\n  //   this.foto.nativeElement.value = \"\";\n  // }\n\n  ngOnInit(): void {\n   \n  }\n\n  onUploadFinish(event) {\n    //this.image = event;\n    // try {\n    //   if (event.target.files && event.target.files.length > 0) {\n\n    //     const file = event.target.files[0];\n    //     const reader = new FileReader();\n    //     if (file.type.indexOf(\"image\") < 0) {\n    //       this.snackBar.open('Solo se permite la carga de imagenes en formato JPG y PNG.');\n    //       return;\n    //     }\n\n    //     const extension = file.name.split('.').pop();\n    //     if (extension !== \"JPG\" && extension !== \"jpg\" && extension !== \"PNG\" && extension !== \"png\") {\n    //       this.snackBar.open('Solo se permite la carga de imagenes en formato JPG y PNG.');\n    //       return;\n    //     }\n\n    //     console.log(file);\n    //     if (file.size > 100000) {\n    //       this.snackBar.open('Por favor carga una imagen que no exceda de 100KB.');\n    //       return;\n    //     }\n    //     reader.readAsDataURL(file);\n    //     reader.onloadend = () => {\n    //       this.image = (reader.result as string);\n    //       this.formTemplateMail.controls['logo'].setValue(reader.result as string);\n    //     };\n    //   }\n    // }\n    // catch (ex) {\n    //   console.log(ex);\n    // }\n    console.log('event',event);\n   }\n  addProduct(form:ProductsI){\n    form.imageProduct =this.image;\n    console.log(\"addForm\",form);\n  }\n  cancel(){\n    this.dialogRef.close();\n  }\n  \n\n}\n","<!-- <mat-card>\n    <h1>Agregar Producto</h1>\n    <p>\n        <mat-form-field>\n                <input matInput [(ngModel)]=\"productNew.productName\" \n                type=\"text\" placeholder=\"Nombre Producto\">\n        </mat-form-field>    \n    </p>\n    <p>\n            <mat-form-field matInput [(ngModel)]=\"productNew.productPrice\" >\n                    <input type=\"text\" placeholder=\"Precio\">\n            </mat-form-field>    \n        </p>\n        <p>\n            <mat-form-field matInput [(ngModel)]=\"productNew.productStock\" >\n                    <input type=\"Number\" placeholder=\"Cantidad\">\n            </mat-form-field>    \n        </p>\n        <p>\n            <mat-form-field matInput [(ngModel)]=\"productNew.idCategory\" >\n                    <input type=\"Number\" placeholder=\"Categoria\">\n            </mat-form-field>    \n        </p>\n        \n            <input type=\"file\" accept=\"image/png,image/jpeg\" #foto required id=\"fotos\" multiple >\n            \n       <br>\n        <p>\n            <app-loading-button [cargando]=\"cargando\" texto=\"Guardar\" (click)=\"add()\"></app-loading-button>\n            <a routerLink=\"/home\" mat-raised-button color=\"primary\" style=\"margin-left: 10px\">Volver</a>\n          </p>\n</mat-card> -->\n\n  <form [formGroup]=\"addForm\" (ngSubmit)=\"addProduct(addForm.value)\">\n    <h2 mat-dialog-title>Productos</h2>\n    <mat-dialog-content>\n        <div class=\"form-group row\">\n            <mat-form-field>\n                <input matInput type=\"text\" placeholder=\"Nombre Producto\" formControlName=\"productName\">\n            </mat-form-field>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"Precio Producto\" formControlName=\"productPrice\">\n                </mat-form-field>\n            </div>\n            <div class=\"col\">\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"Cantidad Producto\" formControlName=\"productStock\">\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <!-- <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"Imagen Producto\" formControlName=\"imageProduct\">                    \n                </mat-form-field> -->\n                <image-upload (uploadFinished)=\"onUploadFinish($event)\"> </image-upload>\n            </div>\n            <div class=\"col\">\n                <mat-form-field>\n                    <input matInput type=\"text\" placeholder=\"categoria\" formControlName=\"idCategory\">\n                </mat-form-field>\n            </div>\n        </div>           \n    </mat-dialog-content>\n    <mat-dialog-actions>\n        <button  mat-raised-button color=\"primary\" type=\"submit\">Guardar</button>\n        <button  mat-raised-button color=\"danger\" (click)=\"cancel()\">Cancelar</button>\n  \n    </mat-dialog-actions>\n  </form>\n\n\n\n<!-- \nidProduct: number;\nproductName: string;\nproductPrice : number;\nproductStock : number;\nimageProduct : string;\nidCategory : number; -->\n<!-- <table class=\"mat-elevation-z13\" *ngIf=\"products\" mat-table [dataSource]=\"products\">\n    <ng-container matColumnDef=\"nombre\">\n        <mat-header-cell *matHeaderCellDef>Nombre</mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.productName}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"descripcion\">\n        <mat-header-cell *matHeaderCellDef>Descripción</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.imageProduct}}</mat-cell>\n      </ng-container>\n    <ng-container matColumnDef=\"precio\">\n        <mat-header-cell *matHeaderCellDef>Precio</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.productPrice | currency}}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"eliminar\">\n        <mat-header-cell *matHeaderCellDef>Eliminar</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button (click)=\"eliminar(element)\" mat-icon-button color=\"warn\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n <mat-header-row *matHeaderRowDef=\"columnas\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: columnas;\"></mat-row>\n \n</table> -->"],"sourceRoot":""},"metadata":{},"sourceType":"module"}